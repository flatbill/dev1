{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/utils/apiRat.js","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","getEnvVars","data","fetch","body","JSON","stringify","method","response","json","AppComponent","title","myCount","myFriend","msgFromBeyond","nango","gdArray1","myFileUrl","URL","myFileName","fileContents","today","Date","totemText","supaMsg","supaUrl","environment","supaAnonKey","supaClient","createClient","console","log","isDevMode","moo","supaRead","waitForIt","now","event","myFriendParmIn","gdaParmIn","rows","tableNameParmIn","colNameParmIn","colValParmIn","limitParmIn","eMsg","from","select","limit","eq","supaDataOut","error","message","cloner","x","myArray","map","length","myColNames","Object","k","myColVals","values","jj","i","findIndex","c","tryTruck","AppModule","BrowserModule","production","apiKey","enableProdMode","platformBrowser","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAA,8BAAwB,CAACS,EAAzB,GAA8B,IAA9B;AACAC,YAAM,CAACC,OAAP,GAAiBX,wBAAjB;;;;;;;;;;;;;;;ACZA;;;AAEA,UAAMY,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3B,eAAOC,KAAK,CAAC,gCAAD,EAAmC;AAC7CC,cAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CADuC;AAE7CK,gBAAM,EAAE;AAFqC,SAAnC,CAAL,CAGJd,IAHI,CAGC,UAAAe,QAAQ,EAAI;AAClB,iBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,SALM,CAAP;AAMD,OAPD;AASA;;;AAAA,uCAAgB;AACdR,kBAAU,EAAEA;AADE,OAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aCNA;AACA;AACA;AAKA;AACA;AACA;;;UAKaS,a;AAJb;AAAA;;AAKE,eAAAC,KAAA,GAAQ,4BAAR,CALF,CAME;;AACA,eAAAC,OAAA,GAAkB,IAAlB;AACA,eAAAC,QAAA,GAAW,GAAX;AACA,eAAAC,aAAA,GAAgB,GAAhB;AACA,eAAAC,KAAA,GAAQ,WAAR;AACA,eAAAC,QAAA,GAAW,CAAC,QAAD,EAAU,QAAV,EAAmB,QAAnB,CAAX;AACA,eAAAC,SAAA,GAAY,IAAIC,GAAJ,CAAQ,cAAR,CAAZ;AACA,eAAAC,UAAA,GAAa,WAAb;AACA,eAAAC,YAAA,GAAoB,gCAApB;AACA,eAAAC,KAAA,GAAQ,IAAIC,IAAJ,EAAR;AACA,eAAAC,SAAA,GAAY,UAAZ;AACA,eAAAC,OAAA,GAAU,EAAV,CAjBF,CAkBE;;AACA,eAAAC,OAAA,GAAU,0DAAAC,WAAA,QAAV;AACA,eAAAC,WAAA,GAAc,0DAAAD,WAAA,YAAd;AACA,eAAAE,UAAA,GAAa,uDAAAC,YAAA,EAAa,KAAKJ,OAAlB,EAA2B,KAAKE,WAAhC,CAAb;AA+QD;;;;iBA7QO,oBAAW;;;;;;;AACfG,6BAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,0BAAI,+CAAAC,SAAA,GAAJ,EAAiB;AACfF,+BAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,uBAFD,MAEO;AACLD,+BAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;;AACD,2BAAKZ,UAAL,GAAkB,eAAlB;AACAW,6BAAO,CAACC,GAAR,CAAY,IAAZ;;AACU,6BAAM,qEAAN;;;AAANE,yB;AAAgC;AACpCH,6BAAO,CAACC,GAAR,CAAY,IAAZ,E,CACA;AACA;AACA;;;AACgB,6BAAM,KAAKG,QAAL,CAAc,SAAd,EAAwB,MAAxB,EAA+B,QAA/B,EAAwC,CAAxC,CAAN;;;AAAZC,+B;;AACQ,6BAAM,KAAKD,QAAL,CAAc,UAAd,EAAyB,SAAzB,EAAmC,MAAnC,EAA0C,CAA1C,CAAN;;;AAAZC,+B;;AACY,6BAAM,KAAKD,QAAL,CAAc,SAAd,EAAwB,YAAxB,EAAqC,UAArC,EAAgD,CAAhD,CAAN;;;AAAZC,+B;AACAL,6BAAO,CAACC,GAAR,CAAYT,IAAI,CAACc,GAAL,EAAZ,EAAwB,oBAAxB,E,CACA;AACA;;;;;;;;;AACD;;;iBAED,oBAAWC,KAAX,EAAkB;AAChB,iBAAKzB,OAAL,GAAeyB,KAAf;AACA,iBAAKvB,aAAL,GAAqB,qBAArB;AACA;;;iBAEF,oBAAWwB,cAAX,EAAgC;AAC9B,iBAAKxB,aAAL,GAAuB,uBAAvB;AACA,iBAAKD,QAAL,GAAgByB,cAAhB;AACD;;;iBACD,oBAAWC,SAAX,EAAsB;AACpB,iBAAKvB,QAAL,GAAgBuB,SAAhB,CADoB,CACS;AAC9B,W,CAGD;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAEA,oBAAQ;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,iBAAKhB,SAAL,GAAiB,oCAAjB;AACA,gBAAIiB,IAAI,GAAG,CACT,CAAC,EAAD,EAAI,KAAJ,EAAU,IAAIlB,IAAJ,EAAV,EAAqB,KAAKC,SAA1B,CADS,EAET,CAAC,EAAD,EAAI,IAAJ,EAAS,IAAID,IAAJ,EAAT,EAAoB,WAApB,CAFS,EAGT,CAAC,EAAD,EAAI,KAAJ,EAAU,IAAIA,IAAJ,EAAV,CAHS,EAIT,CAAC,EAAD,EAAI,KAAJ,EAAU,IAAIA,IAAJ,EAAV,CAJS,CAAX,CAnBM,CAyBN;AACA;AACA;AACA;AACA;AACA;AAGA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGM;AACA;AACA;AACA;AACA;AACA;AACA;AACD,W,CAAC;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;iBAEM,kBAASmB,eAAT,EAAyBC,aAAzB,EAAuCC,YAAvC,EAAoDC,WAApD,EAAiE;;;;;;;;AACrEd,6BAAO,CAACC,GAAR,CAAYT,IAAI,CAACc,GAAL,EAAZ,EAAwB,kBAAxB;A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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","/* Api methods to call /functions */\r\n\r\nconst getEnvVars = (data) => {\r\n  return fetch('/.netlify/functions/getEnvVars', {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nexport default  {\r\n  getEnvVars: getEnvVars\r\n}\r\n\r\n","import { Component } from '@angular/core'\nimport {  OnInit }  from '@angular/core'\n// import { Workbook }  from 'exceljs'\nimport * as fs from 'file-saver';\nimport { createClient } from '@supabase/supabase-js'\n// import { isError } from 'util'\n// import { workers } from 'cluster'\n// import { identifierModuleUrl } from '@angular/compiler'\nimport { isDevMode } from '@angular/core'\nimport { environment } from 'src/environments/environment'\nimport apiRat from 'src/utils/apiRat'\n\n// jun2021 no components for this playground?\n// yipee!\n//ng build --prod --aot --vendor-chunk --common-chunk --delete-output-path --buildOptimizer\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'playground for FlyTechFree'\n  //initialCountInAppComponent: number = 10;\n  myCount: number = 1000;\n  myFriend = '?'\n  msgFromBeyond = '?'\n  nango = 'nangoDude'\n  gdArray1 = ['start1','start2','start3']\n  myFileUrl = new URL('https://test') \n  myFileName = 'file1.txt' \n  fileContents: any = \"This is the content of my file\"\n  today = new Date()\n  totemText = 'killeroo'\n  supaMsg = ''\n  // title = environment.title\n  supaUrl = environment.supaUrl\n  supaAnonKey = environment.supaAnonKey\n  supaClient = createClient(this.supaUrl, this.supaAnonKey)\n\n  async ngOnInit() { \n    console.log('running ngOnInit')\n    if (isDevMode()) {\n      console.log('isDevMode = ON')\n    } else {\n      console.log('isDevMode = OFF')\n    }\n    this.myFileName = 'gooboo777.txt'\n    console.log('47')\n    let moo = await apiRat.getEnvVars() //fails.  i wonder why.\n    console.log('49')\n    //CREATE EXTENSION supabase_vault CASCADE; duznt work, needs local sql\n    //let waitForIt = await this.supaTodoList()  \n    //waitForIt = await this.supaGuitars()  \n    let waitForIt = await this.supaRead('guitars','make','Martin',1)  \n    waitForIt = await this.supaRead('todoList','todoTxt','rain',1)  \n    waitForIt = await this.supaRead('guitars','guitarType','acoustic',7)  \n    console.log(Date.now(), 'bottom of ngOnInit')\n    //this.setUrlFileName()\n    //this.download666(\"hello.txt\",\"This is the content of my file :)\")\n  } \n\n  parentFun2(event) { \n    this.myCount = event;\n    this.msgFromBeyond = 'msg from parentFun2'\n   }\n\n  parentFun1(myFriendParmIn:string): void {\n    this.msgFromBeyond =   \" Msg from parentFun1 \"\n    this.myFriend = myFriendParmIn\n  }\n  parentFun3(gdaParmIn)   {\n    this.gdArray1 = gdaParmIn    //  ['cars','bars','guitars']\n  }\n\n\n  //async tryCar(){\n\n  //setUrlFileName() {\n    //let currentUrl  = new URL(window.location.href)\n    //let leftUrl = currentUrl.toString().split(\"?\")[0] //take off old querystring\n    //let myFileUrl = leftUrl   + '/goo.txt'     \n    //this.myFileName = 'gooboo777.txt'\n    //let a = document.getElementById(\"a\");\n    //let myFile = new Blob([text], {type: type});\n    //a.href = URL.createObjectURL(myFile);\n    //a.myDownload = name;\n  //}\n\n  // setQueryString(ix){\n  //   console.log('running pro setQueryString')\n  //   let myUrl  = new URL(window.location.href)\n  //   //this.qid  = this.qidsArray[ix].qid\n  //   let leftUrl = myUrl.toString().split(\"?\")[0] //take off old querystring\n  //   let myNewUrl = leftUrl       // + '?qid=4&cust=1'\n  //   //  + '?qid='  + this.qid\n  //   //  + '&cust=' + this.cust\n  //   //history.pushState({}, null, myNewUrl)\n  // } // end setQueryString\n\n    //  download666(fName,fContent) {\n    //   // hacky way to create a download element and fake click it.\n    //   var el = document.createElement('a');\n    //   var myBlob:any = new Blob([fContent], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;' });\n    //   el.setAttribute('href', 'data:text/plain;charset=utf-8,' \n    //     + encodeURIComponent(myBlob)); // set contents from excelJS\n    //   el.setAttribute('download', fName);\n    //   el.style.display = 'none';\n    //   document.body.appendChild(el);\n    //   el.click();\n    //   document.body.removeChild(el);\n    // }\n\n    // download777(fname,txt){\n    //    // hacky way to create a download element and fake click it.\n    //   var el = document.createElement('a');\n    //   el.setAttribute('href', 'data:text/plain;charset=utf-8,' \n    //     + encodeURIComponent(txt)); // set contents from excelJS\n    //   el.setAttribute('download', fname);\n    //   el.style.display = 'none';\n    //   document.body.appendChild(el);\n    //   el.click();\n    //   document.body.removeChild(el);\n\n    // }\n\n\n    // dnLoadScoreFile(dnScoreFileName, txt) {\n    //   var elem = document.createElement('a')\n    //   elem.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(txt))\n    //   elem.setAttribute('download', dnScoreFileName)\n    //   elem.style.display = 'none'\n    //   document.body.appendChild(elem)\n    //   elem.click()\n    //   document.body.removeChild(elem) \n    //   this.msg1 = 'file downloaded.'\n    //   this.downloadCsvPending = false\n    // }\n\n    tryTruck(){\n      /* generate array buffer */\n      //// \n      // let workbook = new Workbook()\n      // let worksheet = workbook.addWorksheet('sheet1', \n      // {properties:        {\n      //   tabColor:{argb:'FF00FF00'},\n      //   outlineLevelCol:1,\n      //   defaultColWidth:15\n      // }})\n      ////\n      // worksheet.columns = [\n      //   { header: 'Id', key: 'id', width: 10 },\n      //   { header: 'Name', key: 'name', width: 22 },\n      //   { header: 'When', key: 'when', width: 10 },\n      //   { header: 'Totem Text', key: 'totemText', width: 50 },\n      // ];\n\n      this.totemText = 'this guy is a great wfh candidate.'\n      let rows = [\n        [55,'Bob',new Date(),this.totemText  ],\n        [66,'Ed',new Date(),'blaBlaBla'],\n        [77,'Ron',new Date()],  \n        [88,'Ken',new Date()]  \n      ];\n      // add new rows and return them as array of row objects\n      // let newRows = worksheet.addRows(rows);\n      // let cell = worksheet.getCell('C3');\n      // cell.value = new Date(1968, 5, 1);\n      // cell = worksheet.getCell('B5');\n      // cell.value = 'Kip'\n       \n\n      // for the graduate graphic designers...\n//       worksheet.getCell('B4').font = {\n//       name: 'Arial Black',\n//       color: { argb: 'FF00FF00' },\n//       family: 2,\n//       size: 12,\n//       italic: true \n//       };\n//       worksheet.getCell('A1').fill = {\n//       type: 'pattern',\n//       pattern:'solid',\n//       fgColor:{argb:'F08080'}, //coral\n// }\n// worksheet.getCell('B1').fill = {\n//   type: 'pattern',\n//   pattern:'solid',\n//   fgColor:{argb:'F08080'}, //coral\n// }\n// worksheet.getCell('C1').fill = {\n//   type: 'pattern',\n//   pattern:'solid',\n//   fgColor:{argb:'F08080'}, //coral\n// }\n// worksheet.getCell('D1').fill = {\n//   type: 'pattern',\n//   pattern:'solid',\n//   fgColor:{argb:'F08080'}, //coral\n// }\n\n\n      /////////////////////////////////////////////////\n      // workbook.xlsx.writeBuffer().then((data1) => {\n      //   let blob = new Blob([data1], { \n      //     type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \n      //   })\n      //   fs.saveAs(blob, 'Truck.xlsx')\n      // })\n    } // end tryTruck\n\n  //   async function sendWorkbook(workbook, response) { \n  //     var fileName = 'FileName.xlsx';\n  //     response.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n  //     response.setHeader(\"Content-Disposition\", \"attachment; filename=\" + fileName);\n  //      await workbook.xlsx.write(response);\n  //     response.end();\n  // }\n\n  // async supaTodoList() {\n  //   //This workers, but now we use generic supaRead\n  //   console.log(Date.now(), 'running supaTodoList')\n  //   let eMsg = ''\n  //   let { data: todoList, error } = await this.supaClient\n  //   .from('todoList').select('*')\n  //   if (error) {\n  //     eMsg = error.message\n  //     this.supaMsg ='207 supabase hickup: '\n  //     this.supaMsg = this.supaMsg + eMsg\n  //     throw new Error(eMsg) \n  //   }else{\n  //     this.supaMsg = todoList[0].todoTxt\n  //     console.log('first todo is: ', todoList[0].todoTxt)\n  //   }\n  //   console.log(Date.now(), 'bottom of supaTodoList')\n  // } // end supaTodoList\n\n  // async supaGuitars() {\n  //   // this works, but now use generic supaRead\n  //   console.log(Date.now(), 'running supaGuitars')\n  //   let eMsg = ''\n  //   let { data: guitars, error } = await this.supaClient\n  //   .from('guitars').select().eq('make', 'Martin')\n  //   if (error) {\n  //     eMsg = error.message\n  //     this.supaMsg ='233 supabase hickup: '\n  //     this.supaMsg = this.supaMsg + eMsg\n  //     throw new Error(eMsg) \n  //   }else{\n  //     this.supaMsg = this.supaMsg + '--' + guitars[0].make\n  //     console.log('first guitar is: ', guitars[0].make)\n  //   }\n  //   console.log(Date.now(), 'bottom of supaGuitars')\n\n  // }  // end supaGuitars\n  \n  async supaRead(tableNameParmIn,colNameParmIn,colValParmIn,limitParmIn) {\n    console.log(Date.now(), 'running supaRead')\n    let eMsg = ''\n    let { data: supaDataOut, error } = await this.supaClient\n    .from(tableNameParmIn)\n    .select('*')\n    .limit(limitParmIn)\n    .eq(colNameParmIn,colValParmIn)\n    if (error) {\n      eMsg = error.message\n      this.supaMsg ='250 supabase hickup: '\n      this.supaMsg = this.supaMsg + eMsg\n      throw new Error(eMsg) \n    }else{\n      // we got a result from supabase.\n      // clone the array, so I can reference it\n       let cloner = (x) => x \n       let myArray = supaDataOut.map(cloner)\n      if (myArray.length < 1){\n        // no supabase data matching our criteria\n        this.supaMsg = 'no data found for: ' \n        +tableNameParmIn + ' ' + colNameParmIn + ' ' + colValParmIn \n        return \n      }\n      // myArray myArray.length means we found at least one supabase rec.\n      this.supaMsg += ' *** ' + tableNameParmIn + ' '\n      let myColNames = Object.keys(myArray[0])  \n      for (let k=0;  k < myArray.length; k++){\n        let myColVals  = Object.values(myArray[k]) \n        console.log(Object.values(myArray[k]))\n        for (let jj=0;  jj < myColNames.length; jj++){\n          // show all the fields and values from the supabase recs\n          this.supaMsg += ' ' + myColNames[jj] + ': '\n          this.supaMsg += myColVals[jj]\n        } // end inner for\n      } // end outer for\n      // let myColVals  = Object.values(myArray[0]) // first rec from supabase\n      let i = myColNames.findIndex(c => c == colNameParmIn)\n\n      console.log('282 no error with supaRead')\n    }\n    console.log(Date.now(), 'bottom of supaRead')\n    // .eq(colNameParmIn,\"eat a dumptruck full of chocolate\")\n    // .select(`${sqlParmIn}`) this works, but relies on template literals\n    // .select is supposed to be sql for the column names to return.\n    // .match({ id: 1})  match works funny, duznt like my parms\n    // .filter works funny, hard to understand in and eq\n    // .filter(colNameParmIn,'in','(\"eat a dumptruck full of chocolate\",\"Japan\")')\n    // .filter(colNameParmIn,'eq','\"eat a dumptruck full of chocolate\"')\n\n  } // end supaRead\n\n\n} // end appcomponent\n\n// async await //\n// async a parent function that calls a child function that has an await.\n// example: ansyc ngOnInit() contains\n//                   let waitForIt = await this.supaTodoList()\n// async supaTodoList() contains\n//  let { data: todoList, error } = await supabaseCl\n// so, supaTodoList function finishes before the await runs.\n// yet, ngOninit function nicely waits for supaTodoList function to finish.\n// this is OK for here, but we chaining in other programs.\n// ","<div class=\"hero is-primary\">\n  <h2 class=\"subtitle\"> hello from parent app.component.html </h2>\n  <h2 class=\"subtitley\"> app title: {{title}} </h2>\n</div>\n\n  <div class=\"columns\">\n    <div class=\"column\">\n      <label class=\"label\">msgFromBeyond</label>\n      <textarea class=\"inputy\" readonly type=\"text\" > {{msgFromBeyond}}  </textarea>\n    </div>\n    <div class=\"column\">\n      <label class=\"label\">myCount</label>\n      <textarea class=\"inputy\" readonly type=\"text\" > {{myCount}}  </textarea>\n    </div>\n    <div class=\"column\">\n      <label class=\"label\">myFriend</label>\n      <textarea class=\"inputy\" readonly type=\"text\" > {{myFriend}}  </textarea>\n    </div>\n    <div class=\"column\">\n      <label class=\"label\">gdArray1</label>\n      <textarea class=\"inputy\" readonly type=\"text\" > {{gdArray1}}  </textarea>\n    </div>\n    \n  </div>\n\n   \n    <h2 class=\"subtitley\">parent app.component.html continued...</h2> \n    <p>\n    So, what are we trying to do here?  <br>\n    Jun2021 let's try excelJS. <br>\n    ** Jan 2023 xl disabled, trying supabase.\n    ** xl hogs lotsa mb.\n    ** wish I could find a lightweight spreadsheet writer\n    ** that could do colors like excelJS\n    </p>\n\n<!-- \n  <a href=\"/images/myw3schoolsimage.jpg\" download>\n    <img src=\"/images/myw3schoolsimage.jpg\" alt=\"W3Schools\" width=\"104\" height=\"142\">\n  </a> -->\n\n\n    <span id='tryTruck' \n    class='tag is-small is-info m-1 is-clickable' \n    (click)=tryTruck()>\n    Create & Download Spreadsheet Truck.xlxs</span> \n  <!-- <p>{{myFileName}}</p>\n  <a [href]=myFileUrl download={{myFileName}}> DownloadFile2 </a> -->\n\n  <!-- <span id='downer666' \n    class='tag is-small is-info m-1 is-clickable' \n    (click)=download666()>\n    downer666</span>  -->\n\n\n<!-- \n  notes about component/input/output from 2020\n   In the parent component’s template, \n                          like this file, app.component.html\n  define event bindings \n                like (binder1)\n as part of the child component’s selector. \n                   like app-counter-component\n A binding should point to a method defined \n in the parent component’s class \n                   like parentFun1()\n that takes action on the data received from the child. \n $event contains the payload emitted from the child \nthe emit() method  pushes the event up to the parent component.\n-->\n<p>in dev1, npm install @supabase/supabase-js</p>\n<textarea cols=\"166\" rows=\"11\">  \n    {{supaMsg}}\n</textarea>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  supaUrl: 'https://xkjfwntnkxboulwiolar.supabase.co',\n  supaAnonKey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhramZ3bnRua3hib3Vsd2lvbGFyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NzI4NjQzMjQsImV4cCI6MTk4ODQ0MDMyNH0.MQeBqKr8IBoW7XEPlSp4MKRFXg39C6rPPPSv9quuBJg',\n  apiKey: 'notSureWhatThisIsForSeeDigitalOcean'\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}