{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACqC;;AAErC;AACA;AACA;AAKM,MAAOC,YAAY;EAJzBC;IAKE,UAAK,GAAG,4BAA4B;IACpC;IACA,YAAO,GAAW,IAAI;IACtB,aAAQ,GAAG,IAAI;IACf,kBAAa,GAAG,GAAG;IACnB,UAAK,GAAG,WAAW;IACnB,aAAQ,GAAG,CAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,CAAC;IACvC,cAAS,GAAG,IAAIC,GAAG,CAAC,cAAc,CAAC;IACnC,eAAU,GAAG,WAAW;IACxB,iBAAY,GAAQ,gCAAgC;IACpD,UAAK,GAAG,IAAIC,IAAI,EAAE;IAClB,cAAS,GAAG,UAAU;IACtB,YAAO,GAAG,0CAA0C;IACpD,kBAAa,GAAG,SAAS;IACzB,cAAS,GAAG,IAAIC,KAAK,EAAE;IACvB,YAAO,GAAG,IAAIA,KAAK,EAAE;IACrB;IACA,aAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI;;EAC/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACMC,QAAQ;IAAA;IAAA;MACZC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC;MACA;MACA;MACA;MACA;MACA,KAAI,CAACC,UAAU,GAAG,eAAe;MACjCF,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB;MACAD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB;MACA;MACA;MACA;MACAD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB;MACAD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB;MACA;MACA;MACA;MACA;MACAD,OAAO,CAACC,GAAG,CAACP,IAAI,CAACS,GAAG,EAAE,EAAE,oBAAoB,CAAC;MAC7C;MACA;IAAA;EACF;;EAEAC,UAAU,CAACC,KAAK;IACd,IAAI,CAACC,OAAO,GAAGD,KAAK;IACpB,IAAI,CAACE,aAAa,GAAG,qBAAqB;EAC3C;EAEDC,UAAU,CAACC,cAAqB;IAC9B,IAAI,CAACF,aAAa,GAAK,uBAAuB;IAC9C,IAAI,CAACG,QAAQ,GAAGD,cAAc;EAChC;EACAE,UAAU,CAACC,SAAS;IAClB,IAAI,CAACC,QAAQ,GAAGD,SAAS,EAAI;EAC/B;EAEA;EAGA;EAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACF;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAE,QAAQ;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAI,CAACC,SAAS,GAAG,oCAAoC;IACrD,IAAIC,IAAI,GAAG,CACT,CAAC,EAAE,EAAC,KAAK,EAAC,IAAItB,IAAI,EAAE,EAAC,IAAI,CAACqB,SAAS,CAAG,EACtC,CAAC,EAAE,EAAC,IAAI,EAAC,IAAIrB,IAAI,EAAE,EAAC,WAAW,CAAC,EAChC,CAAC,EAAE,EAAC,KAAK,EAAC,IAAIA,IAAI,EAAE,CAAC,EACrB,CAAC,EAAE,EAAC,KAAK,EAAC,IAAIA,IAAI,EAAE,CAAC,CACtB;IACD;IACA;IACA;IACA;IACA;IACA;IAGA;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAGM;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC,CAAC;EAEAuB,YAAY;IACZjB,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,IAAI,CAACiB,OAAO,GAAG,6BAA6B;IAC5C5B,kEAAgB,EAAE;IAClB,IAAI,CAAC4B,OAAO,GAAG,yBAAyB;IACxClB,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAClD;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EAEAmB,eAAe;IACXpB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,IAAI,CAACiB,OAAO,GAAG,yBAAyB;IACxC5B,mEAAiB,EAAE,CAChBgC,IAAI,CACEC,UAAU,IAAI;MAEfvB,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClDD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BD,OAAO,CAACwB,KAAK,CAACD,UAAU,CAAC;MACzBvB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCD,OAAO,CAACC,GAAG,CAACsB,UAAU,CAACE,QAAQ,CAAC;MAChCzB,OAAO,CAACC,GAAG,CAACsB,UAAU,CAACE,QAAQ,CAAC;MAChCzB,OAAO,CAACC,GAAG,CAACsB,UAAU,CAACE,QAAQ,CAAC;MAChCzB,OAAO,CAACC,GAAG,CAACsB,UAAU,CAACE,QAAQ,CAAC;MAChCzB,OAAO,CAACC,GAAG,CAACsB,UAAU,CAACE,QAAQ,CAAC;MAChCzB,OAAO,CAACC,GAAG,CAACsB,UAAU,CAACE,QAAQ,CAACC,IAAI,CAAC;MACrC1B,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,IAAI0B,CAAC,GAAIJ,UAAU,CAACE,QAAQ,CAACC,IAAI,CAACE,IAAI,EAAG;MACzC,IAAIC,CAAC,GAAGF,CAAC,CAACG,MAAM,EAAE;MAClB9B,OAAO,CAACC,GAAG,CAAC4B,CAAC,CAAC;MACd7B,OAAO,CAACC,GAAG,CAAC4B,CAAC,CAAC;MACd7B,OAAO,CAACC,GAAG,CAAC4B,CAAC,CAAC;MACd7B,OAAO,CAACC,GAAG,CAAC4B,CAAC,CAAC;MACd7B,OAAO,CAACC,GAAG,CAAC4B,CAAC,CAAC;MACd7B,OAAO,CAACC,GAAG,CAACsB,UAAU,CAACQ,MAAM,CAAC;MAC9B/B,OAAO,CAACC,GAAG,CAAC,OAAOsB,UAAW,CAAC;MAC/B;IAEF,CAAC,CACF,CACAS,KAAK,CAAC,MAAK;MACVhC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CACtC;IACH,CAAC,CAAC;EACN,CAAC,CAAC;EAELgC,wBAAwB;IACrBjC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,IAAI,CAACiB,OAAO,GAAG,4BAA4B;IAC3C,IAAIK,UAAU,GAAIjC,qEAAmB,EAAE;IACvCU,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClBD,OAAO,CAACwB,KAAK,CAACD,UAAU,CAAC;IACzB,IAAI,CAACY,iBAAiB,CAACZ,UAAU,CAAC;EAClC,CAAC,CAAC;EAERa,kBAAkB;IAChB;IACA,IAAIC,WAAW,GAAG,SAAS;IAC3B,IAAIC,gBAAgB,GAAG,MAAM;IAC7B,IAAIC,WAAW,GAAG,UAAU;IAC5B,IAAIC,KAAK,GAAG,8DAA8D;IAC1EA,KAAK,IAAI,aAAa,GAAQH,WAAW;IACzCG,KAAK,IAAI,cAAc,GAAGF,gBAAgB;IAC1CE,KAAK,IAAI,aAAa,GAAID,WAAW;IACrCC,KAAK,IAAI,WAAW,GAAM,CAAC;IAC3BC,KAAK,CAACD,KAAK,CAAC;IACZ;IACAE,KAAK,CAACF,KAAK,CAAC,CACXlB,IAAI,CAACqB,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBtB,IAAI,CAACuB,KAAK,IAAG;MAAE7C,OAAO,CAACwB,KAAK,CAACqB,KAAK,CAAC;MACtB7C,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC;IACD,CAAC,CAAC,CACd+B,KAAK,CAAC,MAAK;MAAEhC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAAA,CAAC,CAAI;EAC7D;EAEAkC,iBAAiB,CAACW,KAAK;IACrB9C,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7CD,OAAO,CAACwB,KAAK,CAACsB,KAAK,CAAC;IACpB9C,OAAO,CAACC,GAAG,CAAC6C,KAAK,CAACf,MAAM,CAAC;IACzB,IAAI,IAAI,CAACgB,aAAa,IAAI,SAAS,EAAC;MAAC,IAAI,CAACC,SAAS,GAAGF,KAAK,CAACG,KAAK,EAAE;;IACnE,IAAI,IAAI,CAACF,aAAa,IAAI,OAAO,EAAC;MAAC,IAAI,CAACG,OAAO,GAAGJ,KAAK,CAACG,KAAK,EAAE;;IAC/DjD,OAAO,CAACwB,KAAK,CAAC,IAAI,CAACwB,SAAS,CAAC;IAC7BhD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC+C,SAAS,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC;IACnC;IACAnD,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC5C;EAEE;;mBA5YWV,YAAY;AAAA;;QAAZA,YAAY;EAAA6D;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCnBzBC,4DAAAA,aAA6B;MACLA,oDAAAA,6CAAqC;MAAAA,0DAAAA,EAAK;MAChEA,4DAAAA,YAAsB;MAACA,oDAAAA,GAAqB;MAAAA,0DAAAA,EAAK;MAGjDA,4DAAAA,aAAqB;MAEIA,oDAAAA,oBAAa;MAAAA,0DAAAA,EAAQ;MAC1CA,4DAAAA,kBAA+C;MAACA,oDAAAA,IAAmB;MAAAA,0DAAAA,EAAW;MAEhFA,4DAAAA,cAAoB;MACGA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAQ;MACpCA,4DAAAA,mBAA+C;MAACA,oDAAAA,IAAa;MAAAA,0DAAAA,EAAW;MAE1EA,4DAAAA,cAAoB;MACGA,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAQ;MACrCA,4DAAAA,mBAA+C;MAACA,oDAAAA,IAAc;MAAAA,0DAAAA,EAAW;MAE3EA,4DAAAA,cAAoB;MACGA,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAQ;MACrCA,4DAAAA,mBAA+C;MAACA,oDAAAA,IAAc;MAAAA,0DAAAA,EAAW;MAM3EA,4DAAAA,aAAsB;MAAAA,oDAAAA,8CAAsC;MAAAA,0DAAAA,EAAK;MACjEA,4DAAAA,SAAG;MACHA,oDAAAA,4CAAoC;MAAAA,uDAAAA,UAAI;MACxCA,oDAAAA,oCAA2B;MAAAA,uDAAAA,UAAI;MAC/BA,oDAAAA,mKAIA;MAAAA,0DAAAA,EAAI;MAQJA,4DAAAA,eAEmB;MAAnBA,wDAAAA;QAAA,OAAQC,cAAU;MAAA;MAClBD,oDAAAA,iDAAwC;MAAAA,0DAAAA,EAAO;MAQ/CA,4DAAAA,eAE0B;MAA1BA,wDAAAA;QAAA,OAAQC,qBAAiB;MAAA;MACzBD,oDAAAA,wBAAe;MAAAA,0DAAAA,EAAO;MAEtBA,4DAAAA,eAE6B;MAA7BA,wDAAAA;QAAA,OAAQC,wBAAoB;MAAA;MAC5BD,oDAAAA,uBAAc;MAAAA,0DAAAA,EAAO;MAErBA,4DAAAA,gBAEuB;MAAvBA,wDAAAA;QAAA,OAAQC,kBAAc;MAAA;MACtBD,oDAAAA,sBAAa;MAAAA,0DAAAA,EAAO;MAkBxBA,4DAAAA,SAAG;MAAAA,oDAAAA,kDAA0C;MAAAA,0DAAAA,EAAI;MACjDA,4DAAAA,oBAA+B;MAC3BA,oDAAAA,IACJ;MAAAA,0DAAAA,EAAW;;;MArFcA,uDAAAA,GAAqB;MAArBA,gEAAAA,gCAAqB;MAMQA,uDAAAA,GAAmB;MAAnBA,gEAAAA,8BAAmB;MAInBA,uDAAAA,GAAa;MAAbA,gEAAAA,wBAAa;MAIbA,uDAAAA,GAAc;MAAdA,gEAAAA,yBAAc;MAIdA,uDAAAA,GAAc;MAAdA,gEAAAA,yBAAc;MAkEhEA,uDAAAA,IACJ;MADIA,gEAAAA,+BACJ;;;;;;;;;;;;;;;;;;;;;ACvF0D;AAEX;;AAYzC,MAAOG,SAAS;;mBAATA,SAAS;AAAA;;QAATA,SAAS;EAAAC,YAFRtE,wDAAY;AAAA;;YAHtBoE,oEAAa;AAAA;;sHAKJC,SAAS;IAAAE,eARlBvE,wDAAY;IAAAwE,UAGZJ,oEAAa;EAAA;AAAA;;;;;;;;;;;;;;ACTjB;AACA;AACA;AAEO,MAAMK,WAAW,GAAG;EACzBC,UAAU,EAAE,KAAK;EACjBC,OAAO,EAAE,0CAA0C;EACnDC,WAAW,EAAE,kNAAkN;EAC/NC,MAAM,EAAE;CACT;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;AClB+C;AAGF;AACY;AAEzD,IAAIJ,6EAAsB,EAAE;EAC1BK,6DAAc,EAAE;;AAGlBC,sEAAAA,EAAwB,CAACC,eAAe,CAACX,sDAAS,CAAC,CAChD5B,KAAK,CAACwC,GAAG,IAAIxE,OAAO,CAACyE,KAAK,CAACD,GAAG,CAAC,CAAC;;;;;;;;;;;;;;ACXnC,MAAME,WAAW,GAAG,MAAM;EACxB1E,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACnC,IAAIuC,KAAK,GAAI,6DAA6D;EAC1E,OAAOE,KAAK,CAACF,KAAK,CAAC;AACrB,CAAC;AAED,MAAMN,YAAY,GAAG,MAAM;EACzBlC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EACxCyC,KAAK,CAAC,8DAA8D,CAAC,CACpEpB,IAAI,CAACqB,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBtB,IAAI,CAACuB,KAAK,IAAI;IAAC7C,OAAO,CAACwB,KAAK,CAACqB,KAAK,CAAC;IACtB7C,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpC,CAAC,CACd,CACA+B,KAAK,CAAC,MAAM;IAAChC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAAA,CAAC,CAAI;AAC7D,CAAC;AAGH,MAAOkB,SAAS,GAAG,MAAM;EACvB,IAAIqB,KAAK,GAAI,4DAA4D;EACxEE,KAAK,CAACF,KAAK,CAAC;AACb,CAAC;AAEH,MAAMnB,UAAU,GAAG,MAAM;EACvB,IAAImB,KAAK,GAAI,4DAA4D;EACzExC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpC,OAAOyC,KAAK,CAACF,KAAK,CAAC;AACrB,CAAC,EAAC;;AAEF,iEAAgB;EACdkC,WAAW,EAAEA,WAAW;EACxBrD,UAAU,EAAEA,UAAU;EACtBa,YAAY,EAAEA,YAAY;EAC1Bf,SAAS,EAAEA;AACb,CAAC;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","./src/utils/apiRat.js"],"sourcesContent":["import { Component } from '@angular/core'\nimport {  OnInit }  from '@angular/core'\n// import { Workbook }  from 'exceljs'\nimport * as fs from 'file-saver';\n// import { createClient } from '@supabase/supabase-js'\n// import { isError } from 'util'\n// import { workers } from 'cluster'\n// import { identifierModuleUrl } from '@angular/compiler'\n// import { isDevMode } from '@angular/core'\n// import { environment } from 'src/environments/environment'\nimport apiRat from 'src/utils/apiRat'\n\n// jun2021 no components for this playground?\n// yipee!\n//ng build --prod --aot --vendor-chunk --common-chunk --delete-output-path --buildOptimizer\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'playground for FlyTechFree'\n  //initialCountInAppComponent: number = 10;\n  myCount: number = 1000;\n  myFriend = '??'\n  msgFromBeyond = '?'\n  nango = 'nangoDude'\n  gdArray1 = ['start1','start2','start3']\n  myFileUrl = new URL('https://test') \n  myFileName = 'file1.txt' \n  fileContents: any = \"This is the content of my file\"\n  today = new Date()\n  totemText = 'killeroo'\n  supaMsg = 'i would rather be dead than wet my bed..'\n  supaTableName = 'guitars'\n  sbGuitars = new Array()\n  sbTodos = new Array()\n  // title = environment.title\n  myCurUrl = window.location.href\n  // supaUrl = environment.supaUrl\n  // supaAnonKey = environment.supaAnonKey\n  // supaClient = createClient('123', '456')\n  // obj1 = {\n  //   propertyName1: 'prop1',\n  //   propertyName2: 'prop2',\n  //   mybuildInArray: [1,2,3]\n  // }\n  async ngOnInit() { \n    console.log('45 running ngOnInit')\n    // if (isDevMode()) {\n    //   console.log('isDevMode = ON')\n    // } else {\n    //   console.log('isDevMode = OFF')\n    // }\n    this.myFileName = 'gooboo777.txt'\n    console.log('48')\n    // this.launchReadUsers() \n    console.log('49')\n    //CREATE EXTENSION supabase_vault CASCADE; duznt work, needs local sql\n    //let waitForIt = await this.supaTodoList()  \n    //waitForIt = await this.supaGuitars()  \n    // let resFromApiCall = await this.apiCall()\n    console.log('55')\n    // console.log(resFromApiCall)\n    console.log('57')\n    // let waitForIt = await this.supaRead('guitars','make','Martin',1)  \n    // waitForIt = await this.supaRead('todoList','todoTxt','rain',1)  \n    // waitForIt = await this.supaRead('guitars','guitarType','acoustic',7)  \n    // let seven =  this.kill1()\n    // console.log(seven)\n    console.log(Date.now(), 'bottom of ngOnInit')\n    //this.setUrlFileName()\n    //this.download666(\"hello.txt\",\"This is the content of my file :)\")\n  } \n\n  parentFun2(event) { \n    this.myCount = event;\n    this.msgFromBeyond = 'msg from parentFun2'\n   }\n\n  parentFun1(myFriendParmIn:string): void {\n    this.msgFromBeyond =   \" Msg from parentFun1 \"\n    this.myFriend = myFriendParmIn\n  }\n  parentFun3(gdaParmIn)   {\n    this.gdArray1 = gdaParmIn    //  ['cars','bars','guitars']\n  }\n\n  // kill1(){ return 7}\n  \n\n  //async tryCar(){\n\n  //setUrlFileName() {\n    //let currentUrl  = new URL(window.location.href)\n    //let leftUrl = currentUrl.toString().split(\"?\")[0] //take off old querystring\n    //let myFileUrl = leftUrl   + '/goo.txt'     \n    //this.myFileName = 'gooboo777.txt'\n    //let a = document.getElementById(\"a\");\n    //let myFile = new Blob([text], {type: type});\n    //a.href = URL.createObjectURL(myFile);\n    //a.myDownload = name;\n  //}\n\n  // setQueryString(ix){\n  //   console.log('running pro setQueryString')\n  //   let myUrl  = new URL(window.location.href)\n  //   //this.qid  = this.qidsArray[ix].qid\n  //   let leftUrl = myUrl.toString().split(\"?\")[0] //take off old querystring\n  //   let myNewUrl = leftUrl       // + '?qid=4&cust=1'\n  //   //  + '?qid='  + this.qid\n  //   //  + '&cust=' + this.cust\n  //   //history.pushState({}, null, myNewUrl)\n  // } // end setQueryString\n\n    //  download666(fName,fContent) {\n    //   // hacky way to create a download element and fake click it.\n    //   var el = document.createElement('a');\n    //   var myBlob:any = new Blob([fContent], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;' });\n    //   el.setAttribute('href', 'data:text/plain;charset=utf-8,' \n    //     + encodeURIComponent(myBlob)); // set contents from excelJS\n    //   el.setAttribute('download', fName);\n    //   el.style.display = 'none';\n    //   document.body.appendChild(el);\n    //   el.click();\n    //   document.body.removeChild(el);\n    // }\n\n    // download777(fname,txt){\n    //    // hacky way to create a download element and fake click it.\n    //   var el = document.createElement('a');\n    //   el.setAttribute('href', 'data:text/plain;charset=utf-8,' \n    //     + encodeURIComponent(txt)); // set contents from excelJS\n    //   el.setAttribute('download', fname);\n    //   el.style.display = 'none';\n    //   document.body.appendChild(el);\n    //   el.click();\n    //   document.body.removeChild(el);\n\n    // }\n\n\n    // dnLoadScoreFile(dnScoreFileName, txt) {\n    //   var elem = document.createElement('a')\n    //   elem.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(txt))\n    //   elem.setAttribute('download', dnScoreFileName)\n    //   elem.style.display = 'none'\n    //   document.body.appendChild(elem)\n    //   elem.click()\n    //   document.body.removeChild(elem) \n    //   this.msg1 = 'file downloaded.'\n    //   this.downloadCsvPending = false\n    // }\n\n    tryTruck(){\n      /* generate array buffer */\n      //// \n      // let workbook = new Workbook()\n      // let worksheet = workbook.addWorksheet('sheet1', \n      // {properties:        {\n      //   tabColor:{argb:'FF00FF00'},\n      //   outlineLevelCol:1,\n      //   defaultColWidth:15\n      // }})\n      ////\n      // worksheet.columns = [\n      //   { header: 'Id', key: 'id', width: 10 },\n      //   { header: 'Name', key: 'name', width: 22 },\n      //   { header: 'When', key: 'when', width: 10 },\n      //   { header: 'Totem Text', key: 'totemText', width: 50 },\n      // ];\n\n      this.totemText = 'this guy is a great wfh candidate.'\n      let rows = [\n        [55,'Bob',new Date(),this.totemText  ],\n        [66,'Ed',new Date(),'blaBlaBla'],\n        [77,'Ron',new Date()],  \n        [88,'Ken',new Date()]  \n      ];\n      // add new rows and return them as array of row objects\n      // let newRows = worksheet.addRows(rows);\n      // let cell = worksheet.getCell('C3');\n      // cell.value = new Date(1968, 5, 1);\n      // cell = worksheet.getCell('B5');\n      // cell.value = 'Kip'\n       \n\n      // for the graduate graphic designers...\n//       worksheet.getCell('B4').font = {\n//       name: 'Arial Black',\n//       color: { argb: 'FF00FF00' },\n//       family: 2,\n//       size: 12,\n//       italic: true \n//       };\n//       worksheet.getCell('A1').fill = {\n//       type: 'pattern',\n//       pattern:'solid',\n//       fgColor:{argb:'F08080'}, //coral\n// }\n// worksheet.getCell('B1').fill = {\n//   type: 'pattern',\n//   pattern:'solid',\n//   fgColor:{argb:'F08080'}, //coral\n// }\n// worksheet.getCell('C1').fill = {\n//   type: 'pattern',\n//   pattern:'solid',\n//   fgColor:{argb:'F08080'}, //coral\n// }\n// worksheet.getCell('D1').fill = {\n//   type: 'pattern',\n//   pattern:'solid',\n//   fgColor:{argb:'F08080'}, //coral\n// }\n\n\n      /////////////////////////////////////////////////\n      // workbook.xlsx.writeBuffer().then((data1) => {\n      //   let blob = new Blob([data1], { \n      //     type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \n      //   })\n      //   fs.saveAs(blob, 'Truck.xlsx')\n      // })\n    } // end tryTruck\n\n      tryFunction1(){\n      console.log('running tryFunction1')\n      this.supaMsg = 'i am trying tryFunction1...'\n      apiRat.function1()\n      this.supaMsg = 'i have tried function1.'\n      console.log('i am done with func tryFunction1.')\n    }\n\n  //   async function sendWorkbook(workbook, response) { \n  //     var fileName = 'FileName.xlsx';\n  //     response.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n  //     response.setHeader(\"Content-Disposition\", \"attachment; filename=\" + fileName);\n  //      await workbook.xlsx.write(response);\n  //     response.end();\n  // }\n\n  // async supaTodoList() {\n  //   //This works, but now we use generic supaRead\n  //   console.log(Date.now(), 'running supaTodoList')\n  //   let eMsg = ''\n  //   let { data: todoList, error } = await this.supaClient\n  //   .from('todoList').select('*')\n  //   if (error) {\n  //     eMsg = error.message\n  //     this.supaMsg ='207 supabase hickup: '\n  //     this.supaMsg = this.supaMsg + eMsg\n  //     throw new Error(eMsg) \n  //   }else{\n  //     this.supaMsg = todoList[0].todoTxt\n  //     console.log('first todo is: ', todoList[0].todoTxt)\n  //   }\n  //   console.log(Date.now(), 'bottom of supaTodoList')\n  // } // end supaTodoList\n\n  // async supaGuitars() {\n  //   // this works, but now use generic supaRead\n  //   console.log(Date.now(), 'running supaGuitars')\n  //   let eMsg = ''\n  //   let { data: guitars, error } = await this.supaClient\n  //   .from('guitars').select().eq('make', 'Martin')\n  //   if (error) {\n  //     eMsg = error.message\n  //     this.supaMsg ='233 supabase hickup: '\n  //     this.supaMsg = this.supaMsg + eMsg\n  //     throw new Error(eMsg) \n  //   }else{\n  //     this.supaMsg = this.supaMsg + '--' + guitars[0].make\n  //     console.log('first guitar is: ', guitars[0].make)\n  //   }\n  //   console.log(Date.now(), 'bottom of supaGuitars')\n\n  // }  // end supaGuitars\n  \n  // async supaRead(tableNameParmIn,colNameParmIn,colValParmIn,limitParmIn) {\n  //   console.log(Date.now(), 'running supaRead')\n  //   let eMsg = ''\n  //   let { data: supaDataOut, error } = await this.supaClient\n  //   .from(tableNameParmIn)\n  //   .select('*')\n  //   .limit(limitParmIn)\n  //   .eq(colNameParmIn,colValParmIn)\n  //   if (error) {\n  //     eMsg = error.message\n  //     this.supaMsg ='250 supabase hickup: '\n  //     this.supaMsg = this.supaMsg + eMsg\n  //     throw new Error(eMsg) \n  //   }else{\n  //     // we got a result from supabase.\n  //     // clone the array, so I can reference it\n  //      let cloner = (x) => x \n  //      let myArray = supaDataOut.map(cloner)\n  //     if (myArray.length < 1){\n  //       // no supabase data matching our criteria\n  //       this.supaMsg = 'no data found for: ' \n  //       +tableNameParmIn + ' ' + colNameParmIn + ' ' + colValParmIn \n  //       return \n  //     }\n  //     // myArray myArray.length means we found at least one supabase rec.\n  //     this.supaMsg += ' *** ' + tableNameParmIn + ' '\n  //     let myColNames = Object.keys(myArray[0])  \n  //     for (let k=0;  k < myArray.length; k++){\n  //       let myColVals  = Object.values(myArray[k]) \n  //       console.log(Object.values(myArray[k]))\n  //       for (let jj=0;  jj < myColNames.length; jj++){\n  //         // show all the fields and values from the supabase recs\n  //         this.supaMsg += ' ' + myColNames[jj] + ': '\n  //         this.supaMsg += myColVals[jj]\n  //       } // end inner for\n  //     } // end outer for\n  //     // let myColVals  = Object.values(myArray[0]) // first rec from supabase\n  //     let i = myColNames.findIndex(c => c == colNameParmIn)\n\n  //     console.log('282 no error with supaRead')\n  //   }\n  //   console.log(Date.now(), 'bottom of supaRead')\n  //   // .eq(colNameParmIn,\"eat a dumptruck full of chocolate\")\n  //   // .select(`${sqlParmIn}`) this works, but relies on template literals\n  //   // .select is supposed to be sql for the column names to return.\n  //   // .match({ id: 1})  match works funny, duznt like my parms\n  //   // .filter works funny, hard to understand in and eq\n  //   // .filter(colNameParmIn,'in','(\"eat a dumptruck full of chocolate\",\"Japan\")')\n  //   // .filter(colNameParmIn,'eq','\"eat a dumptruck full of chocolate\"')\n\n  // } // end supaRead\n\n  // async apiCall() {\n  //   console.log('317 running apiCall')\n  //   apiRat.getEnvVars(this.myCurUrl)\n  //   return 'shakerbaker'  \n  //   }\n\n  launchReadUsers() {\n      console.log('running launchReadUsers') \n      this.supaMsg = 'running launchReadUsers'\n      apiRat.readUsers2()\n        .then \n          (   (qtDbRtnObj) => \n            {\n              console.log(' running .then of apiRat.readUsers2')\n              console.log('qtDbRtnObj----->') \n              console.table(qtDbRtnObj)\n              console.log('app.component line 344')\n              console.log(qtDbRtnObj.Response) \n              console.log(qtDbRtnObj.Response) \n              console.log(qtDbRtnObj.Response) \n              console.log(qtDbRtnObj.Response) \n              console.log(qtDbRtnObj.Response) \n              console.log(qtDbRtnObj.Response.Body) \n              console.log('app.component line 351')\n              let x = (qtDbRtnObj.Response.Body.read()) \n              let y = x.decode()\n              console.log(y)\n              console.log(y)\n              console.log(y)\n              console.log(y)\n              console.log(y)\n              console.log(qtDbRtnObj.length) \n              console.log(typeof(qtDbRtnObj))\n              // this.buildListOfUsers(qtDbRtnObj)\n    \n            }\n          )\n          .catch(() => {  // api returned an error \n            console.log('apiRat.readUsers2 error. ' \n            )\n          })\n      } //end launchReadUsers\n\n   launchReadSupabaseBroken() {\n      console.log('372 running launchReadSupabase') \n      this.supaMsg = 'running launchReadSupabase'\n      let qtDbRtnObj =  apiRat.readSupabase()\n      console.log('375')\n      console.table(qtDbRtnObj)\n      this.buildSupabaseList(qtDbRtnObj)            \n      } //end launchReadSupabase\n\nlaunchReadSupabase() {\n  // tableName, tableFieldName, lookupVal, maxRows\n  let tableNameIn = 'guitars'\n  let tableFieldNameIn = 'make'\n  let lookupValIn = 'Washburn'\n  let myUrl = 'https://play.flytechfree.com/.netlify/functions/readSupabase'\n  myUrl += '?tableName='      + tableNameIn\n  myUrl += '&tableField=' + tableFieldNameIn\n  myUrl += '&lookupVal='  + lookupValIn\n  myUrl += '&maxRows='    + 1\n  alert(myUrl)\n  // fetch('https://play.flytechfree.com/.netlify/functions/readSupabase?table=guitars')\n  fetch(myUrl)  \n  .then(res => res.json()) \n  .then(data1 => {console.table(data1)\n                console.log('yes, there are witches390')\n                // this.buildSupabaseList(data1)  \n               })\n  .catch(() => {console.log('launchReadSupabase Error.')}   )\n}\n\nbuildSupabaseList(dbObj){\n  console.log('running buildSupabaseList 391 ')\n  console.table(dbObj)\n  console.log(dbObj.length)\n  if (this.supaTableName == 'guitars'){this.sbGuitars = dbObj.slice() }\n  if (this.supaTableName == 'todos'){this.sbTodos = dbObj.slice() }\n  console.table(this.sbGuitars)\n  console.log(this.sbGuitars[0].make)\n  // console.log(this.sbTodos[0].tasks)\n  console.log('done with buildSupabaseList')\n}\n\n} // end appcomponent\n\n// async await //\n// async a parent function that calls a child function that has an await.\n// example: ansyc ngOnInit() contains\n//                   let waitForIt = await this.supaTodoList()\n// async supaTodoList() contains\n//  let { data: todoList, error } = await supabaseCl\n// so, supaTodoList function finishes before the await runs.\n// yet, ngOninit function nicely waits for supaTodoList function to finish.\n// this is OK for here, but we chaining in other programs.\n// ","<div class=\"hero is-primary\">\n  <h2 class=\"subtitle\"> hello from parent app.component.html </h2>\n  <h2 class=\"subtitley\"> app title: {{title}} </h2>\n</div>\n\n  <div class=\"columns\">\n    <div class=\"column\">\n      <label class=\"label\">msgFromBeyond</label>\n      <textarea class=\"inputy\" readonly type=\"text\" > {{msgFromBeyond}}  </textarea>\n    </div>\n    <div class=\"column\">\n      <label class=\"label\">myCount</label>\n      <textarea class=\"inputy\" readonly type=\"text\" > {{myCount}}  </textarea>\n    </div>\n    <div class=\"column\">\n      <label class=\"label\">myFriend</label>\n      <textarea class=\"inputy\" readonly type=\"text\" > {{myFriend}}  </textarea>\n    </div>\n    <div class=\"column\">\n      <label class=\"label\">gdArray1</label>\n      <textarea class=\"inputy\" readonly type=\"text\" > {{gdArray1}}  </textarea>\n    </div>\n    \n  </div>\n\n   \n    <h2 class=\"subtitley\">parent app.component.html continued...</h2> \n    <p>\n    So, what are we trying to do here?  <br>\n    Jun2021 let's try excelJS. <br>\n    ** Jan 2023 xl disabled, trying supabase.\n    ** xl hogs lotsa mb.\n    ** wish I could find a lightweight spreadsheet writer\n    ** that could do colors like excelJS\n    </p>\n\n<!-- \n  <a href=\"/images/myw3schoolsimage.jpg\" download>\n    <img src=\"/images/myw3schoolsimage.jpg\" alt=\"W3Schools\" width=\"104\" height=\"142\">\n  </a> -->\n\n\n    <span id='tryTruck' \n    class='tag is-small is-info m-1 is-clickable' \n    (click)=tryTruck()>\n    Create & Download Spreadsheet Truck.xlxs</span> \n  <!-- <p>{{myFileName}}</p>\n  <a [href]=myFileUrl download={{myFileName}}> DownloadFile2 </a> -->\n\n  <!-- <span id='downer666' \n    class='tag is-small is-info m-1 is-clickable' \n    (click)=download666()>\n    downer666</span>  -->\n    <span id='launchReadUsers' \n    class='tag is-small is-info m-1 is-clickable' \n    (click)=launchReadUsers()>\n    launchReadUsers</span> \n\n    <span id='launchReadSupabase' \n    class='tag is-small is-info m-1 is-clickable' \n    (click)=launchReadSupabase()>\n    launchSupabase</span> \n\n    <span id='tryFunction1' \n    class='tag is-small is-info m-1 is-clickable' \n    (click)=tryFunction1()>\n    try function1</span> \n\n\n<!-- \n  notes about component/input/output from 2020\n   In the parent component’s template, \n                          like this file, app.component.html\n  define event bindings \n                like (binder1)\n as part of the child component’s selector. \n                   like app-counter-component\n A binding should point to a method defined \n in the parent component’s class \n                   like parentFun1()\n that takes action on the data received from the child. \n $event contains the payload emitted from the child \nthe emit() method  pushes the event up to the parent component.\n-->\n<p>in dev1, npm install @supabase/supabase-js</p>\n<textarea cols=\"166\" rows=\"11\">  \n    {{supaMsg}}\n</textarea>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  supaUrl: 'https://xkjfwntnkxboulwiolar.supabase.co',\n  supaAnonKey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhramZ3bnRua3hib3Vsd2lvbGFyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NzI4NjQzMjQsImV4cCI6MTk4ODQ0MDMyNH0.MQeBqKr8IBoW7XEPlSp4MKRFXg39C6rPPPSv9quuBJg',\n  apiKey: 'notSureWhatThisIsForSeeDigitalOcean'\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","const qtReadUsers = () => {\r\n  console.log(' running qtreadusers')\r\n  let myUrl =  'https://play.flytechfree.com/.netlify/functions/qtReadUsers'\r\n  return fetch(myUrl)  \r\n}\r\n\r\nconst readSupabase = () => {\r\n  console.log(' running apRat.readSupabase')\r\n    fetch('https://play.flytechfree.com/.netlify/functions/readSupabase')\r\n    .then(res => res.json()) \r\n    .then(data1 => {console.table(data1)\r\n                  console.log('yes, there are demons')\r\n                  }\r\n    )\r\n    .catch(() => {console.log('launchReadSupabase Error.')}   )\r\n  }\r\n\r\n\r\nconst  function1 = () => {\r\n  let myUrl =  'https://play.flytechfree.com/.netlify/functions/function-1'\r\n   fetch(myUrl)\r\n  }\r\n\r\nconst readUsers2 = () => {\r\n  let myUrl =  'https://play.flytechfree.com/.netlify/functions/readUsers2'\r\n  console.log('14 running readUsers2')\r\n  return fetch(myUrl)\r\n} // end readUsers2\r\n\r\nexport default  {\r\n  qtReadUsers: qtReadUsers,\r\n  readUsers2: readUsers2,\r\n  readSupabase: readSupabase,\r\n  function1: function1\r\n}\r\n\r\n\r\n// let getEnvVars = (data) => {\r\n\r\n// fetch('https://flytechfreeplayground.netlify.app/.netlify/functions/getEnvVars')\r\n//   .then((response) => {\r\n//     if (!response.ok) {\r\n//       throw new Error('Network response was not OK');\r\n//     }\r\n//     return response.json();\r\n//   })\r\n//   // .then((myBlob) => {\r\n//   //   myImage.src = URL.createObjectURL(myBlob);\r\n//   // })\r\n//   .catch((error) => {\r\n//     console.error('There has been a problem with your fetch operation:', error);\r\n//   });\r\n\r\n// }\r\n\r\n// let getEnvVars  =  async (data) => {\r\n//   console.log('22a running getEnvVars')\r\n//   let res = await fetch('https://play.flytechfree.com/.netlify/functions/getEnvVars')\r\n//   return await res.json()\r\n// }\r\n\r\n// let getEnvVars3 = (data) => {\r\n//   console.log('292 running getEnvVars')\r\n//   //fetch('https://flytechfreeplayground.netlify.app/.netlify/functions/getEnvVars')\r\n//   fetch('https://play.flytechfree.com/.netlify/functions/getEnvVars')\r\n//   .then((response) => response.json())\r\n//   .then((daxa) => {\r\n//     console.log('27')\r\n//     console.log(daxa.length)      \r\n//     console.log(daxa.length)      \r\n//   })\r\n//   .catch(console.error)\r\n//   console.log('32')\r\n// }\r\n\r\n// const getEnvVars2 = (data) => {\r\n//   return fetch(`https://flytechfreeplayground.netlify.app/.netlify/functions/getEnvVars`, \r\n//   {\r\n//   //return fetch('/.netlify/functions/getEnvVars', {\r\n//     body: JSON.stringify(data),\r\n//     method: 'POST'\r\n//   }).then(response => {\r\n//     return response.json()\r\n//   })\r\n// }\r\n// const qtWriteQuestion = (data) => {\r\n//   return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtWriteQuestion`, {\r\n//     body: JSON.stringify(data),\r\n//     method: 'POST'\r\n//   }).then(response => {\r\n//     return response.json()\r\n//   })\r\n// }\r\n\r\n\r\n// export default  {\r\n//   getEnvVars: getEnvVars\r\n// }\r\n\r\n"],"names":["apiRat","AppComponent","constructor","URL","Date","Array","window","location","href","ngOnInit","console","log","myFileName","now","parentFun2","event","myCount","msgFromBeyond","parentFun1","myFriendParmIn","myFriend","parentFun3","gdaParmIn","gdArray1","tryTruck","totemText","rows","tryFunction1","supaMsg","function1","launchReadUsers","readUsers2","then","qtDbRtnObj","table","Response","Body","x","read","y","decode","length","catch","launchReadSupabaseBroken","readSupabase","buildSupabaseList","launchReadSupabase","tableNameIn","tableFieldNameIn","lookupValIn","myUrl","alert","fetch","res","json","data1","dbObj","supaTableName","sbGuitars","slice","sbTodos","make","selectors","decls","vars","consts","template","i0","ctx","BrowserModule","AppModule","bootstrap","declarations","imports","environment","production","supaUrl","supaAnonKey","apiKey","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","err","error","qtReadUsers"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}